/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package audiolibrarymanagerswing;

import java.awt.event.*;
import java.awt.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.tree.*;

       
import  audiolibrarymanagerswing.model.*;

/**
 * This class instantiates the JavaSwingGui of the AudioLibraryManager
 * @author Catalin Mazliu
 */
public class AudioLibraryManagerSwing {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        MyFrame f = new MyFrame("Audio Library Manager - Swing");
        f.setVisible(true);
    }
}


/**
 * This class creates the GUI for the AudioLibrayManager
 * @author Catalin Mazilu
 */
class MyFrame extends JFrame implements ActionListener, TreeSelectionListener {
    /**
     * Defining of graphical objects
     */
        
    /**
     * left Panel
     */
        JPanel leftPanel;
    /**
     * right panel
     */
        JPanel rightPanel;
   
   /**
    * Audio Tree Model
    */ 
      AudioTreeModel audioTreeModel;
      
      /**
       * My Audio Tree
       */
    JTree myAudioTree;
    
    
    /**
     * My JSplitPane
     */
    JSplitPane splitPane;
    
    /**
     * TextArea for displaying info
     */
      JTextArea textInfo;
    
    /**
     * Constructor - creates the GUI Components
     * @param title - String, name of the Windows
     */
    MyFrame(String title) {
        super(title);
        
        setLayout(new BorderLayout() );
        //setSize(1200, 800);
        
        //closing operation
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        //Creating Left Panel
        leftPanel = new JPanel();
        
        
        
        //Creating Right Panel
        rightPanel = new JPanel();
        JLabel rightSideTitle = new JLabel("Info Area");
        
        //creating text area for displaying info
         textInfo = new JTextArea();
        
        
        rightPanel.add(rightSideTitle);
        rightPanel.add(textInfo);
        //rightPanel.setSize(1200, 800);
        
        
        audioTreeModel = new AudioTreeModel("c:\\cantari\\mp3");
        
        JTree myAudioTree = new JTree(audioTreeModel.getTreeModel());
        leftPanel.add(myAudioTree);
        
        //Creating JSlipPanel
        splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, leftPanel, rightPanel);
        getContentPane().add(splitPane,BorderLayout.CENTER);
        
        
        //adding listener
        myAudioTree.addTreeSelectionListener(this);
        
        pack();
        
    }
    
    public void actionPerformed(ActionEvent e){
        System.out.println("Click");
        //if (e.getSource().getClass().toString()== "Jtree")
          JOptionPane op = new JOptionPane();
         
             this.getContentPane().add(op);
          JOptionPane.showMessageDialog(this, "clicked");
    }
    
    /**
     * This method Listens for JTree selections
     * @param event, TreeSelectionEvent generated by JTree node selection
     */
    public void valueChanged(TreeSelectionEvent event) {
      Object obj = event.getNewLeadSelectionPath().getLastPathComponent();
                   
       textInfo.setText(obj.toString());
       //Displaying dialog
       JOptionPane opPane = new JOptionPane();
       JOptionPane.showMessageDialog(this, "clicked");
    }
    
    
}